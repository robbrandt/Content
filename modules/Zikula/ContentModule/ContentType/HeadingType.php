<?php

declare(strict_types=1);

/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 * @link https://ziku.la
 * @version Generated by ModuleStudio 1.4.0 (https://modulestudio.de).
 */

namespace Zikula\ContentModule\ContentType;

use Zikula\Common\Content\AbstractContentType;
use Zikula\Common\Content\ContentTypeInterface;
use Zikula\ContentModule\ContentType\Form\Type\HeadingType as FormType;

/**
 * Heading content type.
 */
class HeadingType extends AbstractContentType
{
    public function getCategory(): string
    {
        return ContentTypeInterface::CATEGORY_BASIC;
    }

    public function getIcon(): string
    {
        return 'header';
    }

    public function getTitle(): string
    {
        return $this->__('Heading');
    }

    public function getDescription(): string
    {
        return $this->__('Section heading (or page title) for structuring large amounts of text.');
    }

    public function getDefaultData(): array
    {
        return [
            'text' => $this->__('Heading'), 
            'headingType' => 'h3', 
            'anchorName' => '', 
            'displayPageTitle' => false
        ];
    }

    public function getTranslatableDataFields(): array
    {
        return ['text', 'anchorName'];
    }

    public function getData(): array
    {
        $data = parent::getData();

        if (true === $data['displayPageTitle']) {
            $data['text'] = $this->getEntity()->getPage()->getTitle();
        }

        return $data;
    }

    public function getSearchableText(): string
    {
        return html_entity_decode(strip_tags($this->data['text']));
    }

    public function getEditFormClass(): string
    {
        return FormType::class;
    }
}
