<?php

/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 * @see https://ziku.la
 * @version Generated by ModuleStudio 1.4.0 (https://modulestudio.de).
 */

declare(strict_types=1);

namespace Zikula\ContentModule\ContentType\Form\Type;

use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\UrlType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Contracts\Translation\TranslatorInterface;
use Zikula\Common\Content\AbstractContentFormType;
use Zikula\Common\Content\ContentTypeInterface;

/**
 * Vimeo form type class.
 */
class VimeoType extends AbstractContentFormType
{
    public function __construct(TranslatorInterface $translator)
    {
        $this->setTranslator($translator);
    }

    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $context = $options['context'] ?? ContentTypeInterface::CONTEXT_EDIT;
        $builder
            ->add('url', UrlType::class, [
                'label' => $this->trans('URL to the video clip') . ':',
                'help' => $this->trans('Something like "https://vimeo.com/7504225".')
            ])
            ->add('text', TextareaType::class, [
                'label' => $this->trans('Video description') . ':',
                'required' => false
            ])
        ;
        if (ContentTypeInterface::CONTEXT_EDIT !== $context) {
            return;
        }
        $builder
            ->add('displayMode', ChoiceType::class, [
                'label' => $this->trans('Display mode') . ':',
                'label_attr' => [
                    'class' => 'radio-inline'
                ],
                'choices' => [
                    $this->trans('Show video inline') => 'inline',
                    $this->trans('Show video in modal window') => 'modal'
                ],
                'expanded' => true
            ])
        ;
    }

    public function getBlockPrefix()
    {
        return 'zikulacontentmodule_contenttype_vimeo';
    }
}
