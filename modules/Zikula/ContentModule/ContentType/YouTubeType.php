<?php

/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 * @see https://ziku.la
 * @version Generated by ModuleStudio 1.4.0 (https://modulestudio.de).
 */

declare(strict_types=1);

namespace Zikula\ContentModule\ContentType;

use Zikula\Common\Content\AbstractContentType;
use Zikula\Common\Content\ContentTypeInterface;
use Zikula\ContentModule\ContentType\Form\Type\YouTubeType as FormType;
use Zikula\ContentModule\Helper\CacheHelper;

/**
 * YouTube content type.
 */
class YouTubeType extends AbstractContentType
{
    /**
     * @var CacheHelper
     */
    protected $cacheHelper;

    public function getCategory(): string
    {
        return ContentTypeInterface::CATEGORY_EXTERNAL;
    }

    public function getIcon(): string
    {
        return 'youtube';
    }

    public function getTitle(): string
    {
        return $this->__('YouTube video');
    }

    public function getDescription(): string
    {
        return $this->__('Display a YouTube video clip.');
    }

    public function getDefaultData(): array
    {
        return [
            'url' => '',
            'text' => '',
            'videoId' => '',
            'displayMode' => 'inline',
            'noCookie' => true,
            'showRelated' => false,
            'autoplay' => false
        ];
    }

    public function getTranslatableDataFields(): array
    {
        return ['url', 'text'];
    }

    public function getSearchableText(): string
    {
        return html_entity_decode(strip_tags($this->data['text']));
    }

    public function displayView(): string
    {
        $this->data['videoId'] = '';
        $r = '/\?v=([-a-zA-Z0-9_]+)(&|$)/';
        if (isset($this->data['url']) && '' !== $this->data['url'] && preg_match($r, $this->data['url'], $matches)) {
            $this->data['videoId'] = $matches[1];
            // @todo fetch additional data if needed - requires an API key though
            // https://developers.google.com/youtube/v3/docs/
            /*$content = $this->cacheHelper->fetch(
                'someurl' . $this->data['videoId'] . '.php'
            );
            if (false !== $content) {
                $this->data['details'] = @json_decode($content, true);
            }*/
        }

        return parent::displayView();
    }

    public function getEditFormClass(): string
    {
        return FormType::class;
    }

    /**
     * @required
     */
    public function setCacheHelper(CacheHelper $cacheHelper): void
    {
        $this->cacheHelper = $cacheHelper;
    }
}
