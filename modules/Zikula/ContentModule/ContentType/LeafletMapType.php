<?php

/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 * @see https://ziku.la
 * @version Generated by ModuleStudio 1.4.0 (https://modulestudio.de).
 */

declare(strict_types=1);

namespace Zikula\ContentModule\ContentType;

use Zikula\Common\Content\AbstractContentType;
use Zikula\Common\Content\ContentTypeInterface;
use Zikula\ContentModule\ContentType\Form\Type\LeafletMapType as FormType;

/**
 * Leaflet map content type.
 */
class LeafletMapType extends AbstractContentType
{
    public function getCategory(): string
    {
        return ContentTypeInterface::CATEGORY_EXTERNAL;
    }

    public function getIcon(): string
    {
        return 'leaf';
    }

    public function getTitle(): string
    {
        return $this->__('Leaflet map');
    }

    public function getDescription(): string
    {
        return $this->__('Display a Leaflet map position.');
    }

    public function getDefaultData(): array
    {
        return [
            'latitude' => '55.8756960390043',
            'longitude' => '12.36185073852539',
            'zoom' => 5,
            'height' => 400,
            'text' => '',
            'tileLayerUrl' => 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
            'tileLayerAttribution' => '&copy;'
                . ' <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        ];
    }

    public function getTranslatableDataFields(): array
    {
        return ['text'];
    }

    public function getSearchableText(): string
    {
        return html_entity_decode(strip_tags($this->data['text']));
    }

    public function getEditFormClass(): string
    {
        return FormType::class;
    }

    public function getAssets(string $context): array
    {
        $assets = parent::getAssets($context);

        if (in_array($context, [ContentTypeInterface::CONTEXT_VIEW, ContentTypeInterface::CONTEXT_EDIT], true)) {
            $pathToStyle = $this->assetHelper->resolve(
                '@ZikulaContentModule:css/style.css'
            );
            $pathToLeaflet = str_replace('Resources/public/css/style.css', '', $pathToStyle)
                . 'vendor/drmonty/leaflet/'
            ;
            $assets['css'][] = $pathToLeaflet . 'css/leaflet.css';
            $assets['js'][] = $pathToLeaflet . 'js/leaflet.min.js';
            $assets['js'][] = $this->assetHelper->resolve(
                '@ZikulaContentModule:js/ZikulaContentModule.ContentType.LeafletMap.js'
            );
        }

        return $assets;
    }

    public function getJsEntrypoint(string $context): ?string
    {
        if (ContentTypeInterface::CONTEXT_VIEW === $context) {
            return 'contentInitLeafletDisplay';
        }
        if (ContentTypeInterface::CONTEXT_EDIT === $context) {
            return 'contentInitLeafletEdit';
        }

        return null;
    }
}
