{# purpose of this template: pages display view #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : (routeArea == 'admin' ? 'adminBase' : 'base') %}
{% extends '@ZikulaContentModule/' ~ baseTemplate ~ '.html.twig' %}
{% block appTitle %}
    {% if inList is not defined %}
        {{ parent() }}
    {% endif %}
{% endblock %}
{% block pageTitle %}{{ page|zikulacontentmodule_formattedTitle|default('Page'|trans) }}{% endblock %}
{% block title %}
    {% set templateTitle = page|zikulacontentmodule_formattedTitle|default('Page'|trans) %}
    {% if page.supportsHookSubscribers %}
        {{ templateTitle|notifyFilters('zikulacontentmodule.filter_hooks.pages.filter')|safeHtml }}
    {% else %}
        {{ templateTitle|safeHtml }}
    {% endif %}
    {% if routeArea == 'admin' %} <small>({{ page.workflowState|zikulacontentmodule_objectState(false)|lower }})</small>{% endif %}
    {% if page.metaDescription is not empty %}
        {{ pageSetVar('meta.description', page.metaDescription|striptags) }}
    {% endif %}
{% endblock %}
{% block titleArea %}
    {% if page.showTitle and inList is not defined %}
        {{ parent() }}
    {% endif %}
{% endblock %}
{% block admin_page_icon 'eye' %}
{% block content %}
    {% set isQuickView = app.request.query.getBoolean('raw', false) %}
    <div id="page{{ page.id }}" class="zikulacontentmodule-page zikulacontentmodule-display{% if page.stylingClasses is not empty %} {{ page.stylingClasses|join(' ') }}{% endif %}">
        {% if not isQuickView and inList is not defined %}
            {% set itemActions = knp_menu_get('zikulaContentMenuItemActions', [], {entity: page, area: routeArea, context: 'display'}) %}
            {% if itemActions|length > 1 %}
                <div class="btn-group btn-group-sm item-actions" role="group" aria-label="{% trans %}Actions{% endtrans %}">
                    {{ knp_menu_render(itemActions, {template: '@ZikulaMenuModule/Override/bootstrap_fontawesome.html.twig'}) }}
                </div>
            {% endif %}
        {% endif %}
        {% if getModVar('ZikulaContentModule', 'enableOptionalString1', false) and page.optionalString1 is not empty %}
            <p class="optional-string1">{{ page.optionalString1 }}</p>
        {% endif %}
        {% if getModVar('ZikulaContentModule', 'enableOptionalString2', false) and page.optionalString2 is not empty %}
            <p class="optional-string2">{{ page.optionalString2 }}</p>
        {% endif %}
        {% if getModVar('ZikulaContentModule', 'enableOptionalText', false) and page.optionalText is not empty %}
            <div class="optional-text">{{ page.optionalText|notifyFilters('zikulacontentmodule.filter_hooks.pages.filter')|safeHtml }}</div>
        {% endif %}
        {{ block('content_elements') }}
        {% if routeArea == 'admin' and featureActivationHelper.isEnabled(constant('Zikula\\ContentModule\\Helper\\FeatureActivationHelper::CATEGORIES'), 'page') %}
            {{ include('@ZikulaContentModule/Helper/includeCategoriesDisplay.html.twig', {obj: page}) }}
        {% endif %}
        {# enable if needed
        {% if featureActivationHelper.isEnabled(constant('Zikula\\ContentModule\\Helper\\FeatureActivationHelper::TREE_RELATIVES'), 'page') %}
            <h3 class="relatives">{% trans %}Relatives{% endtrans %}</h3>
                {{ include(
                    '@ZikulaContentModule/Page/displayTreeRelatives.html.twig',
                    {allParents: true, directParent: true, allChildren: true, directChildren: true, predecessors: true, successors: true, preandsuccessors: true}
                ) }}
        {% endif %}
        {{ include('@ZikulaContentModule/Helper/includeStandardFieldsDisplay.html.twig', {obj: page}) }}
        #}
        {{ block('display_hooks') }}
    </div>
    {{ zikulacontentmodule_increaseAmountOfPageViews(page) }}
{% endblock %}
{% block display_hooks %}
    {% if page.supportsHookSubscribers() %}
        {% set hooks = notifyDisplayHooks(eventName='zikulacontentmodule.ui_hooks.pages.display_view', id=page.getKey(), urlObject=currentUrlObject, outputAsArray=true) %}
        {% if hooks is iterable and hooks|length > 0 %}
            {% for area, hook in hooks %}
                <div class="z-displayhook" data-area="{{ area|e('html_attr') }}">{{ hook|raw }}</div>
            {% endfor %}
        {% endif %}
    {% endif %}
{% endblock %}
{% block content_elements %}
    {% set processedItemIds = [] %}
    {% set contentElements = zikulacontentmodule_contentDetails(page) %}
    {% set showElement = true %}
    {% if inList is defined %}
        {% set showElement = list in ['extended', 'complete'] %}
    {% endif %}
    {% if page.layout|default and page.layout is iterable and page.layout|length > 0 %}
        {% for section in page.layout|filter(s => showElement == true and s.widgets|default and s.widgets is iterable and s.widgets|length > 0) %}
            <div class="row section{% if section.stylingClasses is not empty %} {{ section.stylingClasses }}{% endif %}">
                {% set lastWidget = null %}
                {% for widget in section.widgets|filter(w => showElement == true) %}
                    {% set contentItem = null %}
                    {% for item in page.contentItems|filter(i => i.id == widget.id) %}
                        {% set contentItem = item %}
                        {% set processedItemIds = processedItemIds|merge([item.id]) %}
                    {% endfor %}
                    {% if contentItem != null and zikulacontentmodule_maySeeElement(contentItem) %}
                        {{ _self.showWidget(contentItem, widget, lastWidget, contentElements[contentItem.id]) }}
                        {% if inList is defined and list == 'extended' %}
                            {# extended list shows only the first content element #}
                            {% set showElement = false %}
                        {% endif %}
                    {% endif %}
                    {% set lastWidget = widget %}
                {% endfor %}
            </div>
        {% endfor %}
    {% endif %}
    {% if showElement == true and processedItemIds|length < contentElements|length %}
        {# there are elements which are not included in page layout information yet, so we append them at the end #}
        <div class="row section">
            {% for contentItem in page.contentItems|filter(c => showElement == true and c.id not in processedItemIds) %}
                {% if zikulacontentmodule_maySeeElement(contentItem) %}
                    {{ _self.showWidget(contentItem, null, null, contentElements[contentItem.id]) }}
                    {% if inList is defined and list == 'extended' %}
                        {# extended list shows only the first content element #}
                        {% set showElement = false %}
                    {% endif %}
                {% endif %}
            {% endfor %}
        </div>
    {% endif %}
{% endblock %}
{% macro showWidget(contentItem, widget, lastWidget, contentDetails) %}
    {% set colOffset = 0 %}
    {% if widget|default %}
        {% if lastWidget|default and widget.y == lastWidget.y %}
            {% set colOffset = widget.x - (lastWidget.x + lastWidget.width) %}
        {% else %}
            {% set colOffset = widget.x %}
        {% endif %}
    {% endif %}
    <div id="contentItem{{ contentItem.id }}" class="content-element {{ contentItem.owningType|humanize|lower|replace({' ': '-'})|replace({'\\': ''})|replace({'-content-type': ''}) }} col-md-{{ widget.width|default(12) }}{% if colOffset > 0 %} offset-md-{{ colOffset }}{% endif %}">
        {{ contentDetails|notifyFilters('zikulacontentmodule.filter_hooks.pages.filter')|raw }}
    </div>
{% endmacro %}
{% block footer %}
    {% if inList is not defined %}
        {{ parent() }}
    {% endif %}
{% endblock %}
{% block assets %}
    {% if inList is not defined %}
        {{ parent() }}
    {% endif %}
{% endblock %}
