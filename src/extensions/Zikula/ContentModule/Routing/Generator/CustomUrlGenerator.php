<?php

/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 * @see https://ziku.la
 * @version Generated by ModuleStudio 1.5.0 (https://modulestudio.de).
 */

declare(strict_types=1);

namespace Zikula\ContentModule\Routing\Generator;

use Symfony\Component\Routing\Generator\CompiledUrlGenerator;

/**
 * Custom URL generator.
 */
class CustomUrlGenerator extends CompiledUrlGenerator
{
    protected function doGenerate(
        $variables,
        $defaults,
        $requirements,
        $tokens,
        $parameters,
        $name,
        $referenceType,
        $hostTokens,
        array $requiredSchemes = []
    ) {
        if (
            false !== strpos($name, 'zikulacontentmodule_page_admindisplay')
            || false !== strpos($name, 'zikulacontentmodule_page_display')
        ) {
            $ignoreFirstTreeLevelInRoutes = true;
            if (isset($defaults['ignoreFirstTreeLevelInRoutes'])) {
                $ignoreFirstTreeLevelInRoutes = $defaults['ignoreFirstTreeLevelInRoutes'];
                unset($defaults['ignoreFirstTreeLevelInRoutes']);
            }
            $permalinkSuffix = 'none';
            if (isset($defaults['permalinkSuffix'])) {
                $permalinkSuffix = $defaults['permalinkSuffix'];
                unset($defaults['permalinkSuffix']);
            }

            if (
                true === $ignoreFirstTreeLevelInRoutes
                && isset($parameters['slug'])
                && false !== strpos($parameters['slug'], '/')
            ) {
                $slugParts = explode('/', $parameters['slug']);
                array_shift($slugParts);
                $parameters['slug'] = implode('/', $slugParts);
            }
            if (!isset($parameters['_format'])) {
                $parameters['_format'] = 'none' !== $permalinkSuffix ? $permalinkSuffix : 'html';
            }
        }

        return parent::doGenerate(
            $variables,
            $defaults,
            $requirements,
            $tokens,
            $parameters,
            $name,
            $referenceType,
            $hostTokens,
            $requiredSchemes
        );
    }
}
