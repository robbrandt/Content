<?php

/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 *
 * @see https://ziku.la
 *
 * @version Generated by ModuleStudio 1.5.0 (https://modulestudio.de).
 */

declare(strict_types=1);

namespace Zikula\ContentModule\Helper;

use Symfony\Contracts\Translation\TranslatorInterface;
use Zikula\ContentModule\Helper\Base\AbstractListEntriesHelper;
use Zikula\GroupsModule\Entity\RepositoryInterface\GroupRepositoryInterface;

/**
 * Helper implementation class for list field entries related methods.
 */
class ListEntriesHelper extends AbstractListEntriesHelper
{
    /**
     * @var GroupRepositoryInterface
     */
    protected $groupRepository;

    public function __construct(
        TranslatorInterface $translator,
        GroupRepositoryInterface $groupRepository
    ) {
        parent::__construct($translator);
        $this->groupRepository = $groupRepository;
    }

    public function getScopeEntriesForPage(): array
    {
        $states = parent::getScopeEntriesForPage();

        return $this->addUserGroupEntries($states);
    }

    public function getScopeEntriesForContentItem(): array
    {
        $states = parent::getScopeEntriesForContentItem();

        return $this->addUserGroupEntries($states);
    }

    /**
     * Adds a list of user groups to the given array.
     */
    private function addUserGroupEntries(array $states = []): array
    {
        $groups = $this->groupRepository->findAll();
        foreach ($groups as $group) {
            $states[] = [
                'value'  => $group->getGid(),
                'text'  => $this->trans('Group %group%', ['%group%' => $group->getName()]),
                'title' => '',
                'image' => '',
                'default' => false,
            ];
        }

        return $states;
    }
}
