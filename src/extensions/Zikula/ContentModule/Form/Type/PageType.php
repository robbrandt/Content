<?php

/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 * @see https://ziku.la
 * @version Generated by ModuleStudio 1.5.0 (https://modulestudio.de).
 */

declare(strict_types=1);

namespace Zikula\ContentModule\Form\Type;

use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\FormBuilderInterface;
use Zikula\ContentModule\Form\Type\Base\AbstractPageType;

/**
 * Page editing form type implementation class.
 */
class PageType extends AbstractPageType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        parent::buildForm($builder, $options);

        $builder->remove('layout');
        $builder->remove('views');
        $builder->remove('contentData');

        if ('create' !== $options['mode']) {
            $removeFields = [];
            if (!$this->variableApi->get('ZikulaContentModule', 'enableOptionalString1')) {
                $removeFields[] = 'optionalString1';
            }
            if (!$this->variableApi->get('ZikulaContentModule', 'enableOptionalString2')) {
                $removeFields[] = 'optionalString2';
            }
            if (!$this->variableApi->get('ZikulaContentModule', 'enableOptionalText')) {
                $removeFields[] = 'optionalText';
            }
            foreach ($removeFields as $fieldName) {
                $builder->remove($fieldName);
            }

            $stylingClasses = $this->variableApi->get('ZikulaContentModule', 'pageStyles', '');
            $choices = [];
            $userClasses = explode("\n", $stylingClasses);
            foreach ($userClasses as $class) {
                list($value, $text) = explode('|', $class);
                $value = trim($value);
                $text = trim($text);
                if (!empty($text) && !empty($value)) {
                    $choices[$text] = $value;
                }
            }

            $builder->add('stylingClasses', ChoiceType::class, [
                'label' => 'Styling classes:',
                'empty_data' => [],
                'attr' => [
                    'title' => 'Choose any additional styling classes.'
                ],
                'required' => false,
                'choices' => $choices,
                'multiple' => true
            ]);

            return;
        }

        // remove detail fields which are only required for editing, but not for creation

        $removeFields = [
            'metaDescription',
            'optionalString1',
            'optionalString2',
            'optionalText',

            'showTitle',
            'skipHookSubscribers',
            'active',
            'activeFrom',
            'activeTo',
            'scope',
            'inMenu',
            'stylingClasses',
            'categories'
        ];
        foreach ($removeFields as $fieldName) {
            $builder->remove($fieldName);
        }
        if ($options['has_moderate_permission'] && !$options['inline_usage']) {
            $builder->remove('moderationSpecificCreator');
            $builder->remove('moderationSpecificCreationDate');
        }
    }
}
